##############################################################
#########  Einen Data-Frame in factor/ordered factor Ã¤ndern
##############################################################

## https://stackoverflow.com/questions/33180058/coerce-multiple-columns-to-factors-at-once

## bietet klassische L?sung mit lapply() und dplyr-L?sung mit mutate_each()
## 1)

cols <- c("A", "C", "D", "H")
data[cols] <- lapply(data[cols], factor)
sapply(data, class)


## oder
## 2)
setDT(data)
for(j in cols){
  set(data, i=NULL, j=j, value=factor(data[[j]]))
}


## oder
## 3)
setDT(data)[, (cols):= lapply(.SD, factor), .SDcols=cols]

## oder
## 4)
library(magrittr)
library(dplyr)
cols <- c("A", "C", "D", "H")

data %<>%
  mutate_each_(funs(factor(.)),cols)
str(data)
#'data.frame':  4 obs. of  10 variables:
# $ A: Factor w/ 4 levels "23","24","26",..: 1 2 3 4
# $ B: int  15 13 39 16
# $ C: Factor w/ 4 levels "3","5","18","37": 2 1 3 4
# $ D: Factor w/ 4 levels "2","6","28","38": 3 1 4 2
# $ E: int  14 4 22 20
# $ F: int  7 19 36 27
# $ G: int  35 40 21 10
# $ H: Factor w/ 4 levels "11","29","32",..: 1 4 3 2
# $ I: int  17 1 9 25
# $ J: int  12 30 8 33
